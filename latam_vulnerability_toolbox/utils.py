import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

def plot_irf(irf_results, var_names, periods=20):
    """
    Grafica las funciones de impulso-respuesta (IRF) en una matriz.
    """
    print("\nGenerando gráficos de las Funciones de Impulso-Respuesta...")
    fig, axes = plt.subplots(len(var_names), len(var_names), figsize=(20, 16))
    
    for i, response_var in enumerate(var_names):
        for j, impulse_var in enumerate(var_names):
            irf_data = irf_results.irfs[:periods, i, j]
            ax = axes[i, j]
            ax.plot(irf_data, 'b-', linewidth=2)
            ax.axhline(y=0, color='k', linestyle='--', alpha=0.5)
            ax.set_title(f'Impulso: {impulse_var} → Respuesta: {response_var}', fontsize=10)
            ax.grid(True, alpha=0.3)
            
    plt.suptitle('Funciones de Impulso-Respuesta', fontsize=16, y=0.95)
    plt.tight_layout(rect=[0, 0.03, 1, 0.93])
    plt.show()

def plot_indicator_vs_gdp(indicator_df, gdp_series, country_name="Brasil"):
    """
    Grafica el indicador de condiciones externas contra el PIB del país.
    """
    print(f"\nGenerando gráfico del Indicador de Condiciones Externas vs. PIB para {country_name}...")
    sns.set_style("whitegrid")
    plt.style.use('seaborn-v0_8-talk')
    
    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(18, 12), sharex=True)
    fig.suptitle(f'Termómetro Económico de {country_name}: Factores Externos vs. PIB', fontsize=22, fontweight='bold')

    ax1.set_title(f'Indicador de Condiciones Externas para {country_name} (Base 2016=100)', fontsize=16)
    ax1.plot(indicator_df.index, indicator_df['brazil_external_index'], color='#0077b6', linewidth=2.5, label='Índice Externo')
    ax1.axhline(y=100, color='r', linestyle='--', alpha=0.8, label='Línea Base (2016)')
    ax1.fill_between(indicator_df.index, 100, indicator_df['brazil_external_index'], where=indicator_df['brazil_external_index'] > 100, facecolor='#90ee90', alpha=0.4, interpolate=True, label='Condiciones Favorables')
    ax1.fill_between(indicator_df.index, 100, indicator_df['brazil_external_index'], where=indicator_df['brazil_external_index'] <= 100, facecolor='#ffcccb', alpha=0.4, interpolate=True, label='Condiciones Desfavorables')
    ax1.set_ylabel('Valor del Índice')
    ax1.legend(loc='upper left')

    ax2.set_title(f'Evolución del PIB de {country_name}', fontsize=16)
    ax2.plot(gdp_series.index, gdp_series, color='#023047', linewidth=2.5, label=f'PIB {country_name}')
    ax2.set_xlabel('Período', fontsize=14)
    ax2.set_ylabel('PIB (Niveles)')
    ax2.legend(loc='upper left')
    
    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    plt.show()

def display_ctot_summary(results_df, country_name):
    """Muestra un resumen estadístico de los resultados del CTOT."""
    if results_df.empty:
        print("No hay resultados para mostrar.")
        return

    monthly_changes = results_df['ctot_pct_gdp']
    print(f"\n" + "="*70)
    print(f"RESUMEN ESTADÍSTICO CTOT - {country_name.upper()}")
    print(f"Período: {results_df['date'].min().strftime('%Y-%m')} a {results_df['date'].max().strftime('%Y-%m')}")
    print("="*70)
    print(f"Cambios Mensuales (% del PIB):")
    print(f"  - Media: {monthly_changes.mean():.4f}% | Mediana: {monthly_changes.median():.4f}%")
    print(f"  - Desv. Est.: {monthly_changes.std():.4f}% | Min: {monthly_changes.min():.4f}% | Max: {monthly_changes.max():.4f}%")
    print("="*70 + "\n")

def plot_ctot_results(results_df, country_name):
    """Visualiza los resultados del cálculo del CTOT en 4 paneles."""
    if results_df.empty:
        print("No hay resultados para graficar.")
        return

    fig, axes = plt.subplots(2, 2, figsize=(16, 10))
    fig.suptitle(f'Resultados del Commodity Terms of Trade - {country_name}', fontsize=16, fontweight='bold')

    # Panel 1: Nivel del Índice CTOT
    axes[0, 0].plot(results_df['date'], results_df['ctot_level'], color='navy')
    axes[0, 0].set_title('Nivel del Índice CTOT (Acumulado)')
    axes[0, 0].set_ylabel('Índice (Primer mes = 100)')
    axes[0, 0].grid(True, alpha=0.5)

    # Panel 2: Cambios Mensuales
    colors = ['g' if x > 0 else 'r' for x in results_df['ctot_pct_gdp']]
    axes[0, 1].bar(results_df['date'], results_df['ctot_pct_gdp'], color=colors, alpha=0.7, width=25)
    axes[0, 1].set_title('Cambio Mensual del CTOT (% del PIB)')
    axes[0, 1].set_ylabel('% del PIB')
    axes[0, 1].grid(True, alpha=0.5)

    # Panel 3: Media Móvil
    if len(results_df) >= 12:
        results_df['ctot_12m_avg'] = results_df['ctot_pct_gdp'].rolling(window=12, center=True).mean()
        axes[1, 0].plot(results_df['date'], results_df['ctot_12m_avg'], color='purple')
        axes[1, 0].set_title('Media Móvil de 12 Meses')
        axes[1, 0].set_ylabel('Cambio Suavizado (% del PIB)')
        axes[1, 0].grid(True, alpha=0.5)

    # Panel 4: Distribución
    sns.histplot(results_df['ctot_pct_gdp'], bins=30, kde=True, ax=axes[1, 1])
    axes[1, 1].set_title('Distribución de Cambios Mensuales')
    axes[1, 1].set_xlabel('% del PIB')

    plt.tight_layout(rect=[0, 0.03, 1, 0.95])
    plt.show()

def plot_group_contributions(contributions_df, country_name, groups):
    """Visualiza las contribuciones por grupo de commodities."""
    if contributions_df.empty:
        return

    group_names = list(groups.keys())
    colors = [groups[g].get('color', '#cccccc') for g in group_names]
    contribution_cols = [f'{g}_contribution' for g in group_names]

    fig, ax = plt.subplots(figsize=(16, 8))
    contributions_df.set_index('date')[contribution_cols].plot(kind='bar', stacked=True, ax=ax, color=colors, width=0.8)
    
    ax.set_title(f'Contribuciones Mensuales al CTOT por Grupo - {country_name}', fontsize=14, fontweight='bold')
    ax.set_ylabel('Contribución (% del PIB)')
    ax.legend(title='Grupos de Commodities')
    plt.tight_layout()
    plt.show()